#!/usr/bin/env python3
# This file is placed in the Public Domain.


"simulate clients"


import os
import random
import queue
import shutil
import sys
import termios
import threading
import time
import _thread


sys.path.insert(0, os.getcwd())


from nixt.client  import Client, Fleet
from nixt.errors  import Errors, full
from nixt.object  import Object, keys
from nixt.persist import Workdir, skel
from nixt.thread  import launch


from mods import STARTTIME, Event, Main
from mods import command, elapsed, modules, parse, settable, spl


Main.debug  = True
Main.md5    = False
Workdir.wdr = ".test"


param = Object()
param.cmd = [""]
param.dis = [""]
param.dpl = ["hnrss title,url", ""]
param.flt = [""]
param.fnd = ["log", "rss", "config", "todo", ""]
param.man = [""]
param.mod = [""]
param.mre = [""]
param.nme = ["hnrss hackernews", ""]
param.now = [""]
param.pwd = ["bla mekker", ""]
param.req = [""]
param.res = ["hnrss", ""]
param.srv = [""]
param.thr = [""]
param.upt = [""]
param.ver = [""]


pre = Object()
pre.cfg = ["nick=mekker", ""]
pre.imp = ["tests/feeds.opml", ""]
pre.log = ["bla", ""]
pre.rss = ["http://hnrss.org/newest", ""]
pre.tdo = ["mekker", ""]


post = Object()
post.exp = ['']
post.dne = ["hnrss", ""]
post.rem = ["hnrss", ""]


lap = 1
nrs = 1
nrcommand = 1
percall   = 1


ignore = "dbg,"
paylock = _thread.allocate_lock()


rand = random.SystemRandom()


class CLI(Client):

    def __init__(self):
        Client.__init__(self)
        self.register("command", command)

    def raw(self, txt):
        if "v" in Main.opts:
            print(txt)
            sys.stdout.flush()


def banner():
    tme = time.ctime(time.time()).replace("  ", " ")
    print(f"{Main.name.upper()} since {tme}")
    print("loaded " + ",".join(sorted(modules())))


def payload(clts, cmds):
    cmdz = sorted(keys(cmds))
    if "s" in Main.opts:
        rand.shuffle(cmdz)
    nmr = 0
    for clt in clts:
        for cmd in cmdz:
            if cmd in spl(ignore):
                continue
            examples = getattr(cmds, cmd)
            for example in examples:
                event = Event()
                event.orig = repr(clt)
                event.txt = cmd + " " + example
                event.type = "command"
                clt.put(event)
                nmr += 1
    return nmr


def wrap(function):
    old3 = None
    try:
        old3 = termios.tcgetattr(sys.stdin.fileno())
    except termios.error:
        pass
    try:
        function()
    except (KeyboardInterrupt, EOFError):
        pass
    finally:
        if old3:
            termios.tcsetattr(sys.stdin.fileno(), termios.TCSADRAIN, old3)


def main():
    global nrs
    global nrcommand
    settable()
    parse(Main, " ".join(sys.argv[1:]))
    nrcommand = 0
    if "v" in Main.opts:
        banner()
    if "f" not in Main.opts:
        if os.path.exists(Workdir.wdr):
            shutil.rmtree(Workdir.wdr)
    skel()
    nrclients = 1
    if 'x' in Main.opts:
        nrclients = os.cpu_count()
    for x in range(nrclients):
        clt = CLI()
        clt.start()
    clts = Fleet.all()
    nrs = Main.index or 1
    thrs = []
    for _nr in range(nrs):
        thrs.append(launch(payload, clts, pre))
    for thr in thrs:
        nr = thr.join()
        if nr:
            nrcommand += nr
    thrs = []
    for _nr in range(nrs):
        thrs.append(launch(payload, clts, param))
    for thr in thrs:
        nr = thr.join()
        if nr:
            nrcommand += nr
    thrs = []
    for _nr in range(nrs):
        thrs.append(launch(payload, clts, post))
    for thr in thrs:
        nr = thr.join()
        if nr:
            nrcommand += nr
    Fleet.wait()
    Fleet.shutdown()


if __name__ == "__main__":
    wrap(main)
    endtime = time.time()
    lap = elapsed(endtime-STARTTIME)
    percall = (endtime-STARTTIME)/(nrcommand)
    if "v" in Main.opts:
        print(f"total: {lap} nrs: {nrs} cmds: {nrcommand} call: %.6fs" % percall)
        sys.stdout.flush()
